@use 'sass:color';

$glow-spread: 4px;

@mixin glow($color) {
    $glow-color: color.scale($color, $lightness: 5%);
    box-shadow: inset 0 0 $glow-spread $glow-color, 0 0 $glow-spread $glow-color;
    text-shadow: 0 0 $glow-spread / 2 $glow-color;
}

@mixin neon($color, $animation-name) {
    @include glow($color);

    $glow-color: color.scale($color, $lightness: 5%);

    border: 2px solid $color;
    color: $color;

    @keyframes #{$animation-name} {
        0% {
            background: transparent;
            color: $color;
            box-shadow: 0 0 $glow-spread $glow-color;
        } 10% {
            background: $color;
            color: $black;
        } 15% {
            background: transparent;
            color: $color;
        } 20% {
            background: $color;
            color: $black;
        } 30% {
            background: transparent;
            color: $color;
        } 100% {
            background: $color;
            color: $white;
            text-shadow: 0 0 $glow-spread / 2 white;
            box-shadow: inset 0 0 $glow-spread $glow-color, 0 0 $glow-spread * 4 $glow-color;
        }
    }

    padding: 6px 13px;
    background: transparent;
    border-radius: 2px;
    width: 100%;
    cursor: pointer;

    &:hover {
        animation: #{$animation-name} 1.5s;
        animation-fill-mode: forwards;
    }

    i {
        color: inherit;
    }
}


// Glitch Effect (https://codepen.io/cipherbeta/pen/YLdVjw)
@mixin glitchCopy { 
    content: attr(data-text);
    position: absolute;
    top: 25px;
    left: 10px;
    width: 100%;
    height: 100%;
}

.glitch {
    position: relative;
    color: white;
    letter-spacing: 10px;
    /* Animation provies a slight random skew. Check bottom of doc
    for more information on how to random skew. */
    animation: glitch-skew 1s infinite linear alternate-reverse;

    // Creates a copy before our text. 
    &::before{
        // Duplicates our text with the mixin.
        @include glitchCopy;
        // Scoots text slightly to the left for the color offset.
        left: 2px;
        // Creates the color 'shadow' that happens on the glitch.
        text-shadow: -2px 0 $red;
        /* Creates an initial clip for our glitch. This works in
        a typical top,right,bottom,left fashion and creates a mask
        to only show a certain part of the glitch at a time. */
        clip: rect(44px, 450px, 56px, 0);
        /* Runs our glitch-anim defined below to run in a 5s loop, infinitely,
        with an alternating animation to keep things fresh. */
        animation: glitch-anim 5s infinite linear alternate-reverse;
    }

    // Creates a copy after our text. Note comments from ::before.
    &::after {
        @include glitchCopy;
        left: -2px;
        text-shadow: -2px 0 $blue, 2px 2px $red;
        animation: glitch-anim2 3s infinite linear alternate-reverse;
    }
}

/* Creates an animation with 20 steaps. For each step, it calculates 
a percentage for the specific step. It then generates a random clip
box to be used for the random glitch effect. Also adds a very subtle
skew to change the 'thickness' of the glitch.*/
@keyframes glitch-anim {
    $steps: 20;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

// Same deal, just duplicated for ultra randomness.
@keyframes glitch-anim2 {
    $steps: 20;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            clip: rect(random(100)+px, 9999px, random(100)+px, 0);
            transform: skew((random(100) / 100) + deg);
        }
    }
}

// Does the same deal as before, but now only skews. Used for main text.
@keyframes glitch-skew {
    $steps: 10;
    @for $i from 0 through $steps {
        #{percentage($i*(1/$steps))} {
            transform: skew((random(10) - 5) + deg);
        }
    }
}
